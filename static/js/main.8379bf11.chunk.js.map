{"version":3,"sources":["components/Container/Container.js","components/FeedbackOptions/FeedbackOptions.js","components/Header/Header.js","components/Notification/Notification.js","components/Section/Section.js","components/Statistics/Statistics.js","components/App.js","index.js","components/Container/Container.module.css"],"names":["Container","children","className","styles","FeedbackOptions","onLeaveFeedback","options","map","option","type","onClick","charAt","toUpperCase","slice","Header","Notification","message","Section","title","Statistics","good","neutral","bad","totalFeedback","positiveFeedbackPercentage","App","state","addFeedback","feedback","setState","prevState","this","Math","round","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uQAceA,EAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAOH,UAAvB,SACGC,KCeUG,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,QAApB,OACtB,mCACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,wBAEEC,KAAK,SACLC,QAAS,kBAAML,EAAgBG,IAHjC,SAIGA,EAAOG,OAAO,GAAGC,cAAgBJ,EAAOK,MAAM,IAHxCL,SCAAM,EALA,kBACb,iCACE,yDCOWC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,4BAAIA,KCWSC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOjB,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKiB,IACJjB,MCiBUkB,EApBI,SAAC,GAAqE,IAApEC,EAAmE,EAAnEA,KAAMC,EAA6D,EAA7DA,QAASC,EAAoD,EAApDA,IAAKC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,2BACtD,OACE,qCACE,uCAAWJ,KACX,0CAAcC,KACd,sCAAUC,KACV,wCAAYC,KACZ,oDAAwBC,EAAxB,WC+CSC,E,4MA/CbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAWE,EAAUF,GAAY,O,4CAQtC,WACE,MAA+BG,KAAKL,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAgBH,EAAOC,EAAUC,EACjCE,EAA6BQ,KAAKC,MAAMb,EAAOG,EAAgB,KAC/DjB,EAAU4B,OAAOC,KAAKJ,KAAKL,OACjC,OACI,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAASA,EACTD,gBAAiB0B,KAAKJ,gBAG1B,cAAC,EAAD,CAAST,MAAM,aAAf,SACGK,EAAgB,EACf,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,cAAeA,EACfC,2BAA4BA,IAE9B,cAAC,EAAD,CAAcR,QAAQ,+B,GAxClBoB,a,YCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.8379bf11.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Container.module.css'\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => (\r\n  <>\r\n    {options.map(option => (\r\n      <button\r\n        key = {option}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(option)}>\r\n        {option.charAt(0).toUpperCase() + option.slice(1)}\r\n      </button>\r\n    ))}\r\n  </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\n\r\nconst Header = () => (\r\n  <header >\r\n    <h1>react hw-02 feedback</h1>\r\n  </header>);\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({good, neutral, bad, totalFeedback, positiveFeedbackPercentage}) => {\r\n  return (\r\n    <>\r\n      <p>Good: { good }</p>\r\n      <p>Neutral: { neutral }</p>\r\n      <p>Bad: { bad }</p>\r\n      <p>Total: { totalFeedback }</p>\r\n      <p>Positive feedback: { positiveFeedbackPercentage }%</p>\r\n    </>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  totalFeedback: PropTypes.number.isRequired,\r\n  positiveFeedbackPercentage:PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\n\nimport Container from './Container';\nimport FeedbackOptions from './FeedbackOptions';\nimport Header from './Header';\nimport Notification from './Notification';\nimport Section from './Section';\nimport Statistics from './Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  addFeedback = feedback => {\n    this.setState(prevState => ({\n      [feedback]: prevState[feedback] + 1\n    }))\n  };\n\n  // Упростил \n  // countTotalFeedback = () => Object.values(this.state).reduce((feedback, total) => feedback + total, 0);\n  // countPositiveFeedbackPercentage = () => Math.round(this.state.good / this.countTotalFeedback() * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = good + neutral + bad;\n    const positiveFeedbackPercentage = Math.round(good / totalFeedback * 100);\n    const options = Object.keys(this.state);\n    return (\n        <Container>\n          <Header />\n          <Section title=\"Please leave feedback\">          \n            <FeedbackOptions\n              options={options}\n              onLeaveFeedback={this.addFeedback}\n            />\n          </Section>\n          <Section title=\"Statistics\">           \n            {totalFeedback > 0 ?\n              <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                totalFeedback={totalFeedback}\n                positiveFeedbackPercentage={positiveFeedbackPercentage}\n              /> :\n              <Notification message=\"No feedback given\"/>\n            }\n          </Section>         \n        </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2gGYM\"};"],"sourceRoot":""}